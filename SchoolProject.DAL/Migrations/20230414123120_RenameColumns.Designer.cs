// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolProject.Data;

#nullable disable

namespace SchoolProject.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230414123120_RenameColumns")]
    partial class RenameColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SchoolProject.Models.Entities.Class", b =>
                {
                    b.Property<Guid>("ClassID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("ClassDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClassID");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            ClassID = new Guid("b7f068af-3856-4d1b-9023-91a3d01ac1e0"),
                            ClassDescription = "How to act",
                            ClassName = "Acting"
                        },
                        new
                        {
                            ClassID = new Guid("ebb7a0d9-730f-40f1-9b9c-541f371074ba"),
                            ClassDescription = "How to write movie scripts",
                            ClassName = "Scripting"
                        },
                        new
                        {
                            ClassID = new Guid("941b2d53-f728-4c50-87f8-a8bb2fb6d8c2"),
                            ClassDescription = "How to sing",
                            ClassName = "Singing"
                        },
                        new
                        {
                            ClassID = new Guid("9f082281-2925-4261-a339-be2f4db65271"),
                            ClassDescription = "How to dance",
                            ClassName = "Dancing"
                        });
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.Person", b =>
                {
                    b.Property<Guid>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("SchoolID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearGroup")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("SchoolID");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            UserID = new Guid("cfbe4568-6faf-4a3a-b7eb-6a73ce005bbc"),
                            FirstName = "Johnny",
                            LastName = "Depp",
                            SchoolID = new Guid("fd619e90-2c3d-441c-8ca2-ba278e6ea24d"),
                            UserType = "Teacher"
                        },
                        new
                        {
                            UserID = new Guid("4ca1789c-b20c-4320-8472-c52ebeac47e0"),
                            DateOfBirth = new DateTime(2005, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Angelina",
                            LastName = "Jolie",
                            SchoolID = new Guid("fd619e90-2c3d-441c-8ca2-ba278e6ea24d"),
                            UserType = "Pupil",
                            YearGroup = 13
                        });
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.PersonClass", b =>
                {
                    b.Property<Guid>("ClassID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassID", "UserID");

                    b.HasIndex("UserID");

                    b.ToTable("PersonClass");

                    b.HasData(
                        new
                        {
                            ClassID = new Guid("b7f068af-3856-4d1b-9023-91a3d01ac1e0"),
                            UserID = new Guid("cfbe4568-6faf-4a3a-b7eb-6a73ce005bbc")
                        },
                        new
                        {
                            ClassID = new Guid("ebb7a0d9-730f-40f1-9b9c-541f371074ba"),
                            UserID = new Guid("cfbe4568-6faf-4a3a-b7eb-6a73ce005bbc")
                        },
                        new
                        {
                            ClassID = new Guid("941b2d53-f728-4c50-87f8-a8bb2fb6d8c2"),
                            UserID = new Guid("4ca1789c-b20c-4320-8472-c52ebeac47e0")
                        },
                        new
                        {
                            ClassID = new Guid("b7f068af-3856-4d1b-9023-91a3d01ac1e0"),
                            UserID = new Guid("4ca1789c-b20c-4320-8472-c52ebeac47e0")
                        },
                        new
                        {
                            ClassID = new Guid("ebb7a0d9-730f-40f1-9b9c-541f371074ba"),
                            UserID = new Guid("4ca1789c-b20c-4320-8472-c52ebeac47e0")
                        });
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.School", b =>
                {
                    b.Property<Guid>("SchoolID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SchoolID");

                    b.ToTable("School");

                    b.HasData(
                        new
                        {
                            SchoolID = new Guid("fd619e90-2c3d-441c-8ca2-ba278e6ea24d"),
                            SchoolName = "Hollywood School"
                        });
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.Person", b =>
                {
                    b.HasOne("SchoolProject.Models.Entities.School", "School")
                        .WithMany("Persons")
                        .HasForeignKey("SchoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.PersonClass", b =>
                {
                    b.HasOne("SchoolProject.Models.Entities.Class", "Class")
                        .WithMany("PersonClasses")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolProject.Models.Entities.Person", "Person")
                        .WithMany("PersonClasses")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.Class", b =>
                {
                    b.Navigation("PersonClasses");
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.Person", b =>
                {
                    b.Navigation("PersonClasses");
                });

            modelBuilder.Entity("SchoolProject.Models.Entities.School", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
