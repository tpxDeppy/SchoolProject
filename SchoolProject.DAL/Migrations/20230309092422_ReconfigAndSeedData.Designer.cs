// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolProject.DAL;

#nullable disable

namespace SchoolProject.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230309092422_ReconfigAndSeedData")]
    partial class ReconfigAndSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassPerson", b =>
                {
                    b.Property<Guid>("ClassesClass_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonsUser_ID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassesClass_ID", "PersonsUser_ID");

                    b.HasIndex("PersonsUser_ID");

                    b.ToTable("ClassConnection", (string)null);
                });

            modelBuilder.Entity("SchoolProject.BL.Models.Class", b =>
                {
                    b.Property<Guid>("Class_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Class_description")
                        .IsRequired()
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("Class_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Class_ID");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            Class_ID = new Guid("b7f068af-3856-4d1b-9023-91a3d01ac1e0"),
                            Class_description = "How to act",
                            Class_name = "Acting"
                        },
                        new
                        {
                            Class_ID = new Guid("ebb7a0d9-730f-40f1-9b9c-541f371074ba"),
                            Class_description = "How to write movie scripts",
                            Class_name = "Scripting"
                        },
                        new
                        {
                            Class_ID = new Guid("941b2d53-f728-4c50-87f8-a8bb2fb6d8c2"),
                            Class_description = "How to sing",
                            Class_name = "Singing"
                        });
                });

            modelBuilder.Entity("SchoolProject.BL.Models.Person", b =>
                {
                    b.Property<Guid>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("Date_of_birth")
                        .HasColumnType("date");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("School_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year_group")
                        .HasColumnType("int");

                    b.HasKey("User_ID");

                    b.HasIndex("School_ID");

                    b.ToTable("Person");

                    b.HasData(
                        new
                        {
                            User_ID = new Guid("77fff675-6f16-4871-8110-345b540f598d"),
                            Date_of_birth = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            First_name = "Johnny",
                            Last_name = "Depp",
                            School_ID = new Guid("fd619e90-2c3d-441c-8ca2-ba278e6ea24d"),
                            User_type = "Teacher",
                            Year_group = 0
                        },
                        new
                        {
                            User_ID = new Guid("b63071a1-2890-47ac-9f74-10af84b64ec3"),
                            Date_of_birth = new DateTime(2005, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            First_name = "Angelina",
                            Last_name = "Jolie",
                            School_ID = new Guid("fd619e90-2c3d-441c-8ca2-ba278e6ea24d"),
                            User_type = "Pupil",
                            Year_group = 13
                        });
                });

            modelBuilder.Entity("SchoolProject.BL.Models.School", b =>
                {
                    b.Property<Guid>("School_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("School_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("School_ID");

                    b.ToTable("School");

                    b.HasData(
                        new
                        {
                            School_ID = new Guid("fd619e90-2c3d-441c-8ca2-ba278e6ea24d"),
                            School_name = "Hollywood School"
                        });
                });

            modelBuilder.Entity("ClassPerson", b =>
                {
                    b.HasOne("SchoolProject.BL.Models.Class", null)
                        .WithMany()
                        .HasForeignKey("ClassesClass_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SchoolProject.BL.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PersonsUser_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SchoolProject.BL.Models.Person", b =>
                {
                    b.HasOne("SchoolProject.BL.Models.School", "School")
                        .WithMany("Persons")
                        .HasForeignKey("School_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("School");
                });

            modelBuilder.Entity("SchoolProject.BL.Models.School", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
